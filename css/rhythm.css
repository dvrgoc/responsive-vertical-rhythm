/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* breakpoint variables - start */
/* breakpoint variables - start */
/* vertical rhtyhm variables - start */
/* vertical rhtyhm variables - end */
/* string functions */
html {
  background: repeating-linear-gradient(to bottom, black 0%, black 2.5%, white 2.5%, white 97.5%, black 97.5%, black 100%);
}

@media all and (max-width: 539px) {
  html {
    background-size: 100% 24px;
  }
}

@media all and (min-width: 540px) and (max-width: 1023px) {
  html {
    background-size: 100% 28px;
  }
}

@media all and (min-width: 1024px) {
  html {
    background-size: 100% 36px;
  }
}

@media all and (max-width: 539px) {
  h1 {
    font-size: 40px;
    line-height: 72px;
    font-size: 6rem;
    line-height: 7.2rem;
  }
  h2 {
    font-size: 36px;
    line-height: 48px;
    font-size: 5.4rem;
    line-height: 4.8rem;
  }
  h3 {
    font-size: 32px;
    line-height: 48px;
    font-size: 4.8rem;
    line-height: 4.8rem;
  }
  h4 {
    font-size: 28px;
    line-height: 48px;
    font-size: 4.2rem;
    line-height: 4.8rem;
  }
  h5 {
    font-size: 24px;
    line-height: 48px;
    font-size: 3.6rem;
    line-height: 4.8rem;
  }
  h6 {
    font-size: 20px;
    line-height: 48px;
    font-size: 3rem;
    line-height: 4.8rem;
  }
  p {
    font-size: 16px;
    line-height: 24px;
    font-size: 2.4rem;
    line-height: 2.4rem;
  }
}

@media all and (min-width: 540px) and (max-width: 1023px) {
  h1 {
    font-size: 70px;
    line-height: 84px;
    font-size: 7.11111rem;
    line-height: 8.4rem;
  }
  h2 {
    font-size: 63px;
    line-height: 56px;
    font-size: 6.4rem;
    line-height: 5.6rem;
  }
  h3 {
    font-size: 56px;
    line-height: 56px;
    font-size: 5.68889rem;
    line-height: 5.6rem;
  }
  h4 {
    font-size: 49px;
    line-height: 56px;
    font-size: 4.97778rem;
    line-height: 5.6rem;
  }
  h5 {
    font-size: 42px;
    line-height: 56px;
    font-size: 4.26667rem;
    line-height: 5.6rem;
  }
  h6 {
    font-size: 35px;
    line-height: 56px;
    font-size: 3.55556rem;
    line-height: 5.6rem;
  }
  p {
    font-size: 28px;
    line-height: 28px;
    font-size: 2.84444rem;
    line-height: 2.8rem;
  }
}

@media all and (min-width: 1024px) {
  h1 {
    font-size: 84px;
    line-height: 108px;
    font-size: 8.4rem;
    line-height: 10.8rem;
  }
  h2 {
    font-size: 72px;
    line-height: 72px;
    font-size: 7.2rem;
    line-height: 7.2rem;
  }
  h3 {
    font-size: 60px;
    line-height: 72px;
    font-size: 6rem;
    line-height: 7.2rem;
  }
  h4 {
    font-size: 48px;
    line-height: 72px;
    font-size: 4.8rem;
    line-height: 7.2rem;
  }
  h5 {
    font-size: 36px;
    line-height: 36px;
    font-size: 3.6rem;
    line-height: 3.6rem;
  }
  h6 {
    font-size: 24px;
    line-height: 36px;
    font-size: 2.4rem;
    line-height: 3.6rem;
  }
  p {
    font-size: 24px;
    line-height: 36px;
    font-size: 2.4rem;
    line-height: 3.6rem;
    border-width: 0 0 5px;
    border-style: solid;
    border-color: red;
    padding: 0 0 31px;
    padding: 0 0 3.1rem;
  }
}

html {
  font-size: 62.5%;
}

.fira {
  font-family: 'Fira Sans';
}

.lobster {
  font-family: 'Lobster';
}

.roboto {
  font-family: 'Roboto Slab';
}

@media all and (max-width: 539px) {
  .headings {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
  .headings > * {
    -webkit-box-flex: 50%;
        -ms-flex: 50%;
            flex: 50%;
    text-align: center;
  }
}

@media all and (min-width: 540px) {
  .headings {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
